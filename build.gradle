apply plugin: 'java'
apply plugin: 'io.qameta.allure'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

dependencies {
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.1.4'
    compileOnly 'com.browserstack:browserstack-java-sdk:latest.release'
    testImplementation 'io.percy:percy-java-selenium:1.1.0'
    testImplementation 'com.deque.html.axe-core:selenium:4.3.1'
    testImplementation 'org.testng:testng:7.4.0'
    testImplementation 'io.qameta.allure:allure-testng:2.13.8'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'com.opencsv:opencsv:5.7.1'
    testImplementation 'org.slf4j:slf4j-api:2.0.3'
    testImplementation 'org.slf4j:slf4j-simple:2.0.3'
    testImplementation 'org.apache.commons:commons-lang3:3.11'
    testImplementation 'commons-io:commons-io:2.6'
}

group = 'com.browserstack'
version = '1.0-SNAPSHOT'
description = 'browserstack-examples-testng'
sourceCompatibility = JavaVersion.VERSION_1_8

def browserstackSDKArtifact = configurations.compileClasspath.resolvedConfiguration.resolvedArtifacts.find { it.name == 'browserstack-java-sdk' }

allure {
    autoconfigure = true
    version = '2.4.1'
    resultsDir = file('../allure-results')
}

tasks.register('on-prem', Test) {
    useTestNG()
    if (project.hasProperty('test-name')) {
        include '**/' + project.property('test-name') + '.class'
    } else {
        include '**/OrderTest.class'
    }
    systemProperty "on-prem", "true"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('on-prem-suite', Test) {
    useTestNG()
    systemProperty "on-prem", "true"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('bstack-single', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    if (project.hasProperty('test-name')) {
        include '**/' + project.property('test-name') + '.class'
    } else {
        include '**/OrderTest.class'
    }
    systemProperty "browserstack-local", "false"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('bstack-parallel', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        suites 'src/test/resources/conf/runners/testng.xml'
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    systemProperty "browserstack-local", "false"
    systemProperty "testType", "parallel"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('bstack-parallel-browsers', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        suites 'src/test/resources/conf/runners/testng.xml'
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    systemProperty "browserstack-local", "false"
    systemProperty "testType", "parallel"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('percy', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    include '**/LoginVisualTest.class'
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('percy-ignore', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    include '**/IgnoreRegionVisualTest.class'
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('bstack-local', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    if (project.hasProperty('test-name')) {
        include '**/' + project.property('test-name') + '.class'
    } else {
        include '**/OrderTest.class'
    }
    systemProperty "browserstack-local", "true"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('bstack-local-parallel', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        suites 'src/test/resources/conf/runners/testng.xml'
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    systemProperty "browserstack-local", "true"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

tasks.register('bstack-local-parallel-browsers', Test) {
    useTestNG() {
        dependsOn clean
        useDefaultListeners = true
        suites 'src/test/resources/conf/runners/testng.xml'
        jvmArgs "-javaagent:${browserstackSDKArtifact.file}"
    }
    systemProperty "browserstack-local", "true"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}
